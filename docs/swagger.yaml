basePath: /api
definitions:
  models.Card:
    properties:
      card_answer:
        example: "42"
        type: string
      card_explication:
        example: The number 42 is the answer to life has written in a very famous
          book
        type: string
      card_format:
        example: Date / Name / Country
        type: string
      card_image:
        type: string
      card_question:
        example: What's the answer to life ?
        type: string
      card_tips:
        example: The answer is from a book
        type: string
      card_type:
        example: int/string
        type: string
      deck:
        $ref: '#/definitions/models.Deck'
      deck_id:
        example: 1
        type: integer
    type: object
  models.Deck:
    properties:
      deck_banner:
        example: A banner url
        type: string
      deck_description:
        example: A simple demo deck
        type: string
      deck_name:
        example: First Deck
        type: string
      deck_status:
        description: '0: Draft - 1: Private - 2: Published'
        example: 0
        type: integer
    type: object
host: localhost:1813
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Memnix
  version: "1.0"
paths:
  /v1/cards/:
    get:
      description: Get every cards. Shouldn't really be used
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Card'
            type: array
      summary: get all cards
      tags:
      - Card
  /v1/cards/deck/{deckID}:
    get:
      description: Get every cards from a deck
      parameters:
      - description: Deck ID
        in: path
        name: deckID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Card'
            type: array
      summary: get a list of card
      tags:
      - Card
  /v1/cards/id/{id}:
    get:
      description: Get a card by tech id
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Card'
      summary: get a card
      tags:
      - Card
  /v1/decks:
    get:
      description: Get every deck. Shouldn't really be used, consider using /v1/decks/public
        instead !
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Deck'
      summary: get all decks
      tags:
      - Deck
  /v1/decks/{id}:
    get:
      description: Get a deck by tech ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: model
      summary: get a deck
      tags:
      - Deck
  /v1/decks/public:
    get:
      description: Get all public deck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: model
      summary: get a list of deck
      tags:
      - Deck
  /v1/decks/user/{userID}:
    get:
      description: Get decks a user is sub to
      parameters:
      - description: user ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Deck'
            type: array
      summary: get a list of deck
      tags:
      - Deck
swagger: "2.0"
